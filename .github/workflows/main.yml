name: Build release

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create BAIN folders and move files
        run: |
          # Create final mod packaging folder
          mkdir minai

          # 1) Create the BAIN subfolders inside "minai"
          mkdir "minai/000 Required - Core Files"
          mkdir "minai/200 Optional - BakaScripts"

          # 2) Move the core files into "000 Required - Core Files"
          #    Adjust as needed depending on which files/folders you want to include.
          Move-Item -Path Scripts -Destination "minai/000 Required - Core Files" -Force -ErrorAction SilentlyContinue
          Move-Item -Path Data -Destination "minai/000 Required - Core Files" -Force -ErrorAction SilentlyContinue
          Move-Item -Path mantella_files -Destination "minai/000 Required - Core Files" -Force -ErrorAction SilentlyContinue
          Move-Item -Path *.esp -Destination "minai/000 Required - Core Files" -Force -ErrorAction SilentlyContinue
          Move-Item -Path *.ini -Destination "minai/000 Required - Core Files" -Force -ErrorAction SilentlyContinue

          # 3) Move Baka scripts (named Baka*.pex) into "200 Optional - BakaScripts"
          #    If your Baka scripts are in the Scripts folder, search them and move them out.
          Get-ChildItem -Path "minai/000 Required - Core Files/Scripts" -Filter "Baka*.pex" -Recurse -File |
            Move-Item -Destination "minai/200 Optional - BakaScripts" -Force

      - name: Create and populate fomod folder
        run: |
          # 1) Create fomod folder structure
          mkdir -p "minai/fomod/images"

          # 2) Copy/rename the splash image if present
          if (Test-Path "minai_plugin/splash.png") {
            Copy-Item -Path "minai_plugin/splash.png" -Destination "minai/fomod/images/minai_banner.png" -Force
          }

      - name: Generate info.xml with Git ref as version
        shell: pwsh
        run: |
          $refName = "${{ github.ref_name }}"
          Set-Content -Path "minai/fomod/info.xml" -Value @"
<?xml version="1.0" encoding="UTF-16"?>
<fomod>
  <Name>MinAI</Name>
  <Author>YourNameHere</Author>
  <Id>12345</Id>
  <!-- Use Git ref name for version -->
  <Version MachineVersion="$refName">$refName</Version>
  <Website>https://example.com/MyMod</Website>
  <Groups>
    <element>Gameplay</element>
  </Groups>
  <Description>
<![CDATA[
A short description of your mod.

Features:
 - Core Files
 - Optional Baka Scripts

Thanks for downloading!
]]>
  </Description>
</fomod>
"@

      - name: Generate ModuleConfig.xml
        shell: pwsh
        run: |
          Set-Content -Path "minai/fomod/ModuleConfig.xml" -Value @"
<?xml version="1.0" encoding="UTF-16"?>
<config xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="https://qconsulting.ca/fo3/ModConfig5.0.xsd">

  <moduleName>MinAI FOMOD Installer</moduleName>

  <!-- All core files installed automatically -->
  <requiredInstallFiles>
    <folder source="000 Required - Core Files" destination="" priority="0"/>
  </requiredInstallFiles>

  <installSteps order="Explicit">
    <installStep name="Optional Baka Scripts">
      <image path="fomod/images/minai_banner.png"/>
      <optionalFileGroups>
        <group name="TNTR v0.5 Patch" type="SelectAny">
          <option name="Install Baka Scripts">
            <files>
              <!-- Everything in 200 Optional - BakaScripts -->
              <folder source="200 Optional - BakaScripts" destination="Scripts" priority="1"/>
            </files>
            <description><![CDATA[
Installs the Baka .pex files for TNTR v0.5.
]]></description>
          </option>
        </group>
      </optionalFileGroups>
    </installStep>
  </installSteps>

</config>
"@

      - name: Zip the mod files
        uses: TheDoctor0/zip-release@0.7.6
        with:
          path: "./minai/*"
          type: "zip"
          filename: "MinAI-${{ github.ref_name }}.zip"

      - name: Upload Release
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: "MinAI-${{ github.ref_name }}.zip"
          token: ${{ secrets.RELEASE_TOKEN }}
          generateReleaseNotes: true
          prerelease: true
