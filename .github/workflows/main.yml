name: Build release

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-latest
    
    # Defines REF_NAME as an environment variable for the job
    env:
      REF_NAME: ${{ github.ref_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create BAIN folders and move files
        run: |
          # Create the main folder and subfolders
          mkdir minai
          mkdir "minai/000 Required - Core Files"
          mkdir "minai/200 Optional - BakaScripts"
          mkdir "minai/300 Optional - Mantella"

          # Move core files -> 000 Required - Core Files
          Move-Item -Path Scripts -Destination "minai/000 Required - Core Files" -Force -ErrorAction SilentlyContinue
          Move-Item -Path Data -Destination "minai/000 Required - Core Files" -Force -ErrorAction SilentlyContinue
          Move-Item -Path *.esp -Destination "minai/000 Required - Core Files" -Force -ErrorAction SilentlyContinue
          Move-Item -Path *.ini -Destination "minai/000 Required - Core Files" -Force -ErrorAction SilentlyContinue

          # Move Baka scripts (Baka*.pex) -> 200 Optional - BakaScripts
          if (Test-Path "minai/000 Required - Core Files/Scripts") {
            Get-ChildItem -Path "minai/000 Required - Core Files/Scripts" -Filter "Baka*.pex" -Recurse -File |
              Move-Item -Destination "minai/200 Optional - BakaScripts" -Force
          }

          # Move mantella_files -> 300 Optional - Mantella
          Move-Item -Path mantella_files -Destination "minai/300 Optional - Mantella" -Force -ErrorAction SilentlyContinue

      - name: Create and populate fomod/images
        run: |
          mkdir -p "minai/fomod/images"
          if (Test-Path "minai_plugin/splash.png") {
            Copy-Item -Path "minai_plugin/splash.png" -Destination "minai/fomod/images/minai_banner.png" -Force
          }

      - name: Generate info.xml
        shell: pwsh
        run: |
          $refName = $env:REF_NAME

          $infoXml = @"
          <?xml version='1.0' encoding='UTF-16'?>
          <fomod>
            <Name>MinAI</Name>
            <Author>Min</Author>
            <Id>128980</Id>
            <Version MachineVersion='$refName'>$refName</Version>
            <Website>https://github.com/MinLL/MinAI</Website>
            <Groups>
              <element>Gameplay</element>
            </Groups>
            <Description>
          <![CDATA[
          LLM Integrations with Skyrim
          
          Features:
           - Core Files
           - Optional TNTR Support
           - Optional Mantella Files
          
          Version: $refName
          
          Thanks for downloading!
          ]]>
            </Description>
          </fomod>
          "@

          Set-Content -Path "minai/fomod/info.xml" -Value $infoXml -Encoding Unicode

      - name: Generate ModuleConfig.xml
        shell: pwsh
        run: |
          # This EXACT snippet below uses <plugins> and <plugin>, as you requested
          $moduleConfig = @"
          <?xml version='1.0' encoding='UTF-16'?>
          <config xmlns:xsi='https://www.w3.org/2001/XMLSchema-instance'
                  xsi:noNamespaceSchemaLocation='https://qconsulting.ca/fo3/ModConfig5.0.xsd'>
          
            <moduleName>MinAI FOMOD Installer</moduleName>
          
            <!-- Automatically install all core files -->
            <requiredInstallFiles>
              <folder source='000 Required - Core Files' destination='' priority='0'/>
            </requiredInstallFiles>
          
            <!-- Single install step with an image + 2 optional groups (TNTR + Mantella) -->
            <installSteps order='Explicit'>
              <installStep name='Optional Integrations'>
                <image path='fomod/images/minai_banner.png'/>
                <optionalFileGroups>
                  <!-- Group #1: TNTR v0.5 Patch -->
                  <group name='TNTR Support' type='SelectAny'>
                    <plugins order='Explicit'>
                      <plugin name='TNTR v0.5 Patch'>
                        <description>Select this option to install a patch to support TNTR v0.5</description>
                        <files>
                          <folder source='200 Optional - BakaScripts' destination='Scripts' priority='1'/>
                        </files>
                      </plugin>
                    </plugins>
                  </group>
          
                  <!-- Group #2: Mantella Files -->
                  <group name='Mantella Files' type='SelectAny'>
                    <plugins order='Explicit'>
                      <plugin name='Install mantella_files'>
                        <description>Install optional files for Mantella Support</description>
                        <files>
                          <!-- Installs 300 Optional - Mantella to Data/ -->
                          <folder source='300 Optional - Mantella' destination='' priority='2'/>
                        </files>
                      </plugin>
                    </plugins>
                  </group>
                </optionalFileGroups>
              </installStep>
            </installSteps>
          
          </config>
          "@

          Set-Content -Path "minai/fomod/ModuleConfig.xml" -Value $moduleConfig -Encoding Unicode

      - name: Zip the mod files
        uses: TheDoctor0/zip-release@0.7.6
        with:
          path: "./minai/*"
          type: "zip"
          filename: "MinAI-${{ env.REF_NAME }}.zip"

      - name: Upload Release
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: "MinAI-${{ env.REF_NAME }}.zip"
          token: ${{ secrets.RELEASE_TOKEN }}
          generateReleaseNotes: true
          prerelease: true
