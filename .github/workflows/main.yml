name: Build release

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create BAIN folders and move files
        run: |
          mkdir minai
          mkdir "minai/000 Required - Core Files"
          mkdir "minai/200 Optional - BakaScripts"

          Move-Item -Path Scripts -Destination "minai/000 Required - Core Files" -Force -ErrorAction SilentlyContinue
          Move-Item -Path Data -Destination "minai/000 Required - Core Files" -Force -ErrorAction SilentlyContinue
          Move-Item -Path mantella_files -Destination "minai/000 Required - Core Files" -Force -ErrorAction SilentlyContinue
          Move-Item -Path *.esp -Destination "minai/000 Required - Core Files" -Force -ErrorAction SilentlyContinue
          Move-Item -Path *.ini -Destination "minai/000 Required - Core Files" -Force -ErrorAction SilentlyContinue

          # Move Baka .pex files from Scripts -> 200 Optional - BakaScripts
          Get-ChildItem -Path "minai/000 Required - Core Files/Scripts" -Filter "Baka*.pex" -Recurse -File |
            Move-Item -Destination "minai/200 Optional - BakaScripts" -Force

      - name: Create and populate fomod folder
        run: |
          mkdir -p "minai/fomod/images"
          # If there's a splash image, rename it to minai_banner.png
          if (Test-Path "minai_plugin/splash.png") {
            Copy-Item -Path "minai_plugin/splash.png" -Destination "minai/fomod/images/minai_banner.png" -Force
          }

      - name: Generate info.xml with Git ref as version
        shell: pwsh
        run: |
          $refName = "${{ github.ref_name }}"

          # Note the single quotes inside the XML for version and encoding:
          $infoXml = @"
<?xml version='1.0' encoding='UTF-16'?>
<fomod>
  <Name>MinAI</Name>
  <Author>YourName</Author>
  <Id>12345</Id>
  <Version MachineVersion='$refName'>$refName</Version>
  <Website>https://example.com/MyMod</Website>
  <Groups>
    <element>Gameplay</element>
  </Groups>
  <Description>
<![CDATA[
A short description of your mod.

Features:
 - Core Files
 - Optional Baka Scripts

Version: $refName

Thanks for downloading!
]]>
  </Description>
</fomod>
"@

          Set-Content -Path "minai/fomod/info.xml" -Value $infoXml -Encoding Unicode

      - name: Generate ModuleConfig.xml
        shell: pwsh
        run: |
          # Again, escape or use single quotes in the XML line
          $moduleConfig = @"
<?xml version='1.0' encoding='UTF-16'?>
<config xmlns:xsi='https://www.w3.org/2001/XMLSchema-instance'
        xsi:noNamespaceSchemaLocation='https://qconsulting.ca/fo3/ModConfig5.0.xsd'>

  <moduleName>MinAI FOMOD Installer</moduleName>

  <requiredInstallFiles>
    <folder source='000 Required - Core Files' destination='' priority='0'/>
  </requiredInstallFiles>

  <installSteps order='Explicit'>
    <installStep name='Optional Baka Scripts'>
      <image path='fomod/images/minai_banner.png'/>
      <optionalFileGroups>
        <group name='TNTR v0.5 Patch' type='SelectAny'>
          <option name='Install Baka Scripts'>
            <files>
              <folder source='200 Optional - BakaScripts' destination='Scripts' priority='1'/>
            </files>
            <description><![CDATA[
Installs Baka .pex files into Scripts.
]]></description>
          </option>
        </group>
      </optionalFileGroups>
    </installStep>
  </installSteps>

</config>
"@

          Set-Content -Path "minai/fomod/ModuleConfig.xml" -Value $moduleConfig -Encoding Unicode

      - name: Zip the mod files
        uses: TheDoctor0/zip-release@0.7.6
        with:
          path: "./minai/*"
          type: "zip"
          filename: "MinAI-${{ github.ref_name }}.zip"

      - name: Upload Release
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: "MinAI-${{ github.ref_name }}.zip"
          token: ${{ secrets.RELEASE_TOKEN }}
          generateReleaseNotes: true
          prerelease: true
